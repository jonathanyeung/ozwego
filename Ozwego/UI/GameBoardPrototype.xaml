<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Ozwego.UI.GameBoardPrototype"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Ozwego"
    xmlns:common="using:Ozwego.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    

    <Page.Resources>
        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">Game Board Prototype</x:String>

        <Storyboard x:Name="GridFadeOut">
            <!--<DoubleAnimation
                  Storyboard.TargetProperty="Opacity"
                  From="1.0" To="0.0" Duration="0:0:1" />-->
        </Storyboard>
        <!--Storyboard.TargetProperty="Opacity"-->
        <Storyboard x:Name="GridFadeIn">
            <!--<DoubleAnimation
                  Storyboard.TargetProperty="Opacity"
                  From="0.0" To="1.0" Duration="0:0:1" />-->
        </Storyboard>



        <Storyboard x:Name="ColorCircle">
            <ColorAnimation
                                EnableDependentAnimation="true"
                                Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                Duration="0:0:3"
                                AutoReverse="True"
                                To="Blue"
                                RepeatBehavior="Forever"
                                />
            <!--Storyboard.TargetName="DumpCircle"-->
        </Storyboard>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>

        <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>

        <StackPanel Grid.Column="2" Grid.Row="0" HorizontalAlignment="Center">
            <TextBlock Text="Game Clock" FontSize="30" HorizontalAlignment="Center" Margin="0, 20, 0, 0"></TextBlock>
            <TextBlock Name="GameTimeUI" Text="{Binding GameTime, Mode=TwoWay}" FontSize="25" HorizontalAlignment="Center" Margin="0, 0, 0, 10"></TextBlock>
        </StackPanel>


        
        <StackPanel Grid.Row="1" Grid.Column="0"  HorizontalAlignment="Center">
            <Button Name="StartGame" Content="Start Game"   Grid.Row="1" VerticalAlignment="Top" Width="200" Tapped="StartGame_OnTapped" Margin="0, 10, 0, 0"/>
            <Button Content="Test UI 1" HorizontalAlignment="Left"  Grid.Row="1" VerticalAlignment="Top" Width="200" Margin="0, 10, 0, 0" Tapped="UIElement_OnTapped"></Button>
            <Button Content="Test UI 2" HorizontalAlignment="Left"  Grid.Row="1" VerticalAlignment="Top" Width="200" Margin="0, 10, 0, 0" Tapped="UIElement_OnTapped2"></Button>
        </StackPanel>
        
        
        <!--ToDo: Tweak Scrollviewer.  Try ScrollChaining=Disabled; ZoomInertia OnDoubleTapped to zoom in; Zoom Snap Points--> 
        <ScrollViewer Name="GameBoardScrollViewer" Grid.RowSpan="3"  Grid.Column="1"  ZoomMode="Enabled"
                      Height="Auto" HorizontalScrollMode="Enabled" VerticalScrollMode="Enabled" VerticalScrollBarVisibility="Hidden"
                      HorizontalScrollBarVisibility="Hidden" IsHorizontalRailEnabled="True" IsVerticalRailEnabled="True" 
                      MaxZoomFactor="2.5" MinZoomFactor=".5"
                      IsHorizontalScrollChainingEnabled="True"
                      DoubleTapped="GameBoardScrollViewer_OnDoubleTapped"
                      >
            <Grid Name="GameBoard" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </ScrollViewer>


            <Grid Name="TileRackUi" Grid.Row="2" Grid.ColumnSpan="3" Width="Auto" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0, 0, 0, 20">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
            </Grid.ColumnDefinitions>
        </Grid>

        <!--Dump Box-->
        <Ellipse Name="DumpCircle" Width="180" Height="180" Fill="Red" Grid.Row="0" Grid.ColumnSpan="3" Grid.RowSpan="2" VerticalAlignment="Top" Margin="20" />
        <Ellipse Width="140" Height="140" Fill="DarkRed" Grid.Row="0" Grid.ColumnSpan="3" Grid.RowSpan="2" VerticalAlignment="Top" Margin="40" />
        <Ellipse Width="100" Height="100" Fill="OrangeRed" Grid.Row="0" Grid.ColumnSpan="3" Grid.RowSpan="2" VerticalAlignment="Top" Margin="60" />

        <Rectangle Name="DumpBox" Width="180" Height="180" Grid.Row="0" Grid.ColumnSpan="3"  HorizontalAlignment="Center" Margin="20"></Rectangle>
        <TextBlock Name="TilePoolCountUI" Text="{Binding TilePileCount, Mode=TwoWay}" Grid.Row="0" Grid.ColumnSpan="3" FontSize="25" HorizontalAlignment="Center" Margin="0, 90, 0, 0"></TextBlock>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
